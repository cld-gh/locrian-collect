import pandas as pd
import pytest

from locrian_collect.parse_level_two_book import parse_level_two_book


@pytest.fixture
def mock_book():
    return {
        "asks": [
            [4006.41, 0.0574], [4006.37, 0.0574], [4006.34, 0.0574],
            [4006.32, 0.0472], [4005.97, 0.839], [4005.77, 0.0024],
            [4005.73, 0.0405], [4005.56, 0.0112], [4002.83, 22.5915],
            [3999.85, 0.275]
        ],
        "bids": [
            [3999.05, 0.3856], [3999.03, 0.327], [3998.87, 10.8253],
            [3997.63, 1.5318], [3995.81, 0.216], [3995.8, 1.5635],
            [3992.87, 0.203], [3992.85, 1.8945], [3991.86, 0.275],
            [3991.01, 1.8672]
        ]}


def test_parse_level_two_book(mock_book):
    """Test parsing of the level two book."""
    expected = pd.DataFrame({
        'timestamp': {
            0: 12345, 1: 12345, 2: 12345, 3: 12345, 4: 12345,
            5: 12345, 6: 12345, 7: 12345, 8: 12345, 9: 12345,
            10: 12345, 11: 12345, 12: 12345, 13: 12345, 14: 12345,
            15: 12345, 16: 12345, 17: 12345, 18: 12345, 19: 12345},
        'side': {
            0: 1, 1: 1, 2: 1, 3: 1, 4: 1, 5: 1, 6: 1, 7: 1, 8: 1, 9: 1,
            10: 2, 11: 2, 12: 2, 13: 2, 14: 2, 15: 2, 16: 2, 17: 2, 18: 2, 19: 2},
        'level': {
            0: 1, 1: 2, 2: 3, 3: 4, 4: 5, 5: 6, 6: 7, 7: 8, 8: 9, 9: 10,
            10: 1, 11: 2, 12: 3, 13: 4, 14: 5, 15: 6, 16: 7, 17: 8, 18: 9, 19: 10},
        'price': {
            0: 3999.85, 1: 4002.83, 2: 4005.56, 3: 4005.73, 4: 4005.77,
            5: 4005.97, 6: 4006.32, 7: 4006.34, 8: 4006.37, 9: 4006.41,
            10: 3999.05, 11: 3999.03, 12: 3998.87, 13: 3997.63, 14: 3995.81,
            15: 3995.8, 16: 3992.87, 17: 3992.85, 18: 3991.86, 19: 3991.01},
        'volume': {
            0: 0.275, 1: 22.5915, 2: 0.0112, 3: 0.0405, 4: 0.0024,
            5: 0.839, 6: 0.0472, 7: 0.0574, 8: 0.0574, 9: 0.0574,
            10: 0.3856, 11: 0.327, 12: 10.8253, 13: 1.5318, 14: 0.216,
            15: 1.5635, 16: 0.203, 17: 1.8945, 18: 0.275, 19: 1.8672}})

    assert parse_level_two_book(12345, mock_book).equals(expected)
